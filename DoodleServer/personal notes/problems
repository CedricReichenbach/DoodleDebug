- Should RenderingPlugins be typified or not? Atm, objects are always casted there, because Renderings are typified.

- Should the output be always cleared at the beginning of a run or not?
	Guess it should

- User program seems not to terminate when using DoodleDebug
	Probably because client thread remains ready for sending stuff

- IE: box-shadow inside border -> nasty space at bottom (because box-shadow is inside border)

- DD has veery long to render a int[200][120][3] (see study usecase "c_matrix")

- Stop server always before starting it (for when last shutdown was not correct)

- Eclipse suggests to import DD library, when actually JUnit is needed...

- Problems when running first time -> JDT icon loading problems? (maybe not saved yet in temp dir)

- Problems with multiple eclipse instances running DoodleDebug (bc. using same address/port)
	-> current approach not working (write location of instance to file)

- Had to step back from JSON, it destroyed order of arrays

- CSS of deeply nested objects not used/transferred.
	See package "nesting" in DemoExamples, *only* doodle world (but with level and player inside)
	-> boolean black instead of green

- If a workspace contains two classes with the same full name, DoodleDubug might choose the wrong one.

- Doo.class can't be doodled.

- Custom RenderingPlugins can't be provided (Exception)